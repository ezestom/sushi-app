---
interface HeaderProps {
	href: string;
}
const { href } = Astro.props;
---


<span class="burger-icon flex flex-grow basis-0 z-20">
	<a class="" href={href}>
		<label
			class="burger bg-[#e6dcc9] rounded-full transition fixed top-8"
			for="burger">
			<input type="checkbox" class="line" id="burger" /></label
		>
	</a>

	<style>
		/* start burger btn styles */

		.burger {
			width: 50px;
			height: 50px;
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			user-select: none;
			cursor: pointer;
			transition: 300ms;
			border-radius: 100;
		}
		.burger input[type="checkbox"] {
			appearance: none;
			transition: 300ms;
		}

		.burger::before,
		.burger::after {
			content: "";
			transition: 300ms;
			transform-origin: center center;
		}

		.burger::before {
			transform: translateY(8px);
		}
		.burger::after {
			transform: translateY(-8px);
		}
		.burger .line,
		.burger::before,
		.burger::after {
			width: 25px;
			height: 1.5px;
			display: block;
			background-color: #292929;
			border-radius: 5px;
			position: absolute;
		}

		.burger .line:checked {
			width: 0;
			transition-delay: 100ms;
		}
		.burger:has(.line:checked)::before {
			animation: animation1 400ms ease-out 0s 1 both;
		}
		.burger:has(.line:checked)::after {
			animation: animation2 400ms ease-out 0s 1 both;
		}

		.burger:active {
			scale: 0.95;
		}
		@keyframes animation1 {
			0% {
				transform: translateY(8px) rotate(0deg);
			}
			50% {
				transform: translateY(0px) rotate(0deg);
			}
			100% {
				transform: translateY(0px) rotate(45deg);
			}
		}
		@keyframes animation2 {
			0% {
				transform: translateY(-8px) rotate(0deg);
			}
			50% {
				transform: translateY(0px) rotate(0deg);
			}
			100% {
				transform: translateY(0px) rotate(-45deg);
			}
		}
		/* end burger btn styles */
	</style>
</span>
